<% if (typeof canConsultUsers === 'undefined') { canConsultUsers = false; } %>
<% if (typeof canDownloadPDF === 'undefined') { canDownloadPDF = false; } %>
<% const leadsData = typeof leads !== 'undefined' ? leads : []; %>
<% const selectedColumnsData = typeof selectedColumns !== 'undefined' ? selectedColumns : []; %>

<%- include('../includes/head.ejs') %>

<style>
.grafica {
    display: none;
}
</style>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<main>
    <div class="container mx-auto px-4 py-8">
        <div class="flex">
            <h1 class="text-2xl font-bold mb-6">Gráficas Dinámicas</h1>
        </div>

        <!-- Formulario para seleccionar columnas -->
        <div class="mb-4">
            <form action="/reports" method="post" id="tuFormularioId">
                <% columns.forEach(column => { %>
                    <label class="mr-4">
                        <input type="checkbox" name="columns" value="<%= column.Field %>"> <%= column.Field %>
                    </label>
                <% }); %>
                <!-- Campo oculto para el token CSRF -->
                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                <input type="submit" value="Generar Gráfica" class="bg-blue-500 text-white rounded-md px-2 py-1">
            </form>
        </div>

        <br>

        <div class="grafica">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                <div>
                    <h3>Gráfica de Barras</h3>
                    <canvas id="barChart"></canvas>
                </div>
                <div>
                    <h3>Gráfica de Líneas</h3>
                    <canvas id="lineChart"></canvas>
                </div>
            </div>
        </div>
    </div>

</main>
<button class="bg-blue-500 text-white rounded-md px-2 py-1" id="pdf" onclick="downloadPDF()">Generar PDF</button>

<script>
function downloadPDF() {
    window.location.href = '/leads/pdf';
}

document.getElementById('tuFormularioId').addEventListener('submit', function(event) {
    event.preventDefault(); // Evita que el formulario se envíe de inmediato

    const barChartData = {
        labels: leadsData.map(lead => lead[selectedColumnsData[0]]), // Usa selectedColumnsData aquí
        datasets: [{
            label: 'Datos',
            data: leadsData.map(lead => lead[selectedColumnsData[1]]), // Y aquí también
            backgroundColor: ['red', 'blue', 'green', 'yellow']
        }]
    };

    const barChartConfig = {
        type: 'bar',
        data: barChartData,
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    };

    const barChart = new Chart(document.getElementById('barChart'), barChartConfig);

    // Puedes repetir un proceso similar para la gráfica de líneas

    document.querySelector('.grafica').style.display = 'block';
    this.submit(); // Envía el formulario después de mostrar las gráficas
});
</script>

<%- include('../includes/foot.ejs') %>
